{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepare-events.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","helpers/modal-style.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","CssTextField","styled","TextField","color","borderBottomColor","borderColor","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","on","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","label","variant","onChange","Navbar","useSelector","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","uiOpenModal","Modal","setAppElement","now","minutes","seconds","add","later","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","endDate","setEndDate","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","eventSaved","_id","eventStartAddNew","minDate","placeholder","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","location","pathname","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fffb74d5.chunk.js","sourcesContent":["export const types = {\n    uiOpenModal: \"[ui] Open modal\",\n    uiCloseModal: \"[ui] Close modal\",\n\n    eventSetActive: \"[event] Set active event\",\n    eventStartAddNew: \"[event] Start add new\",\n    eventAddNew: \"[event] Add new event\",\n    eventClearActiveEvent: \"[event] Clear active event\",\n    eventUpdated: \"[event] Event updated\",\n    eventDeleted: \"[event] Event deleted\",\n    eventLoaded: \"[event] Event loaded\",\n\n    authCheckingFinish: \"[auth] Finish checking login state\",\n    authStartLogin: \"[auth] Start login\",\n    authLogin: \"[auth] Login\",\n    authStartRegister: \"[auth] Start register\",\n    authStartTokenRenew: \"[auth] Start token renew\",\n    authLogout: \"[auth] Logout\"\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true\n    // uid: null,\n    // name: null\n};\n\nexport const authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n\n        default:\n            return state;\n    }\n};\n","import moment from \"moment\";\nimport { types } from \"../types/types\";\n\n// {\n//     id: asfdsafasf,\n//     title: \"Cumpleanos del tio\",\n//     start: moment().toDate(), // sinonimo de new Date() pero con moment\n//     end: moment().add(2, \"hour\").toDate(),\n//     notes: \"Comprar pastel\",\n//     user: {\n//         _id: \"123\",\n//         name: \"Roberto\"\n//     }\n// }\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            };\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [...state.events, action.payload]\n            };\n\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            };\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map((e) =>\n                    e.id === action.payload.id ? action.payload : e\n                )\n            };\n\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter((e) =>\n                    (e.id !== state.activeEvent.id)\n                ),\n                activeEvent: null\n            };\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [...action.payload]\n            }\n\n        default:\n            return state;\n    }\n};\n","\nimport { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\nexport const uiReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n        \n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n});","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n)","const baseUrl = process.env.REACT_APP_API_URL;\n\nexport const fetchSinToken = (endpoint, data, method = \"GET\") => {\n    const url = `${baseUrl}/${endpoint}`;\n\n    if (method === \"GET\") {\n        return fetch(url);\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        });\n    }\n};\n\nexport const fetchConToken = (endpoint, data, method = \"GET\") => {\n    const url = `${baseUrl}/${endpoint}`;\n    const token = localStorage.getItem('token') || '';\n\n    if (method === \"GET\") {\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                \"Content-type\": \"application/json\",\n                'x-token': token\n            },\n            body: JSON.stringify(data)\n        });\n    }\n}","import moment from \"moment\";\n\nexport const prepareEvents = (events = []) => {\n    return events.map((e) => ({\n        ...e,\n        end: moment(e.end).toDate(),\n        start: moment(e.start).toDate()\n    }));\n};\n","import Swal from \"sweetalert2\";\n\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepare-events\";\nimport { types } from \"../types/types\";\n\nexport const eventStartAddNew = (event) => {\n    return async (dispatch, getState) => {\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchConToken(\"events\", event, \"POST\");\n            const body = await resp.json();\n\n            if (body.ok) {\n                event.id = body.eventSaved.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                };\n\n                console.log(event);\n                dispatch(eventAddNew(event));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n};\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n});\n\nexport const eventStartUpdate = (event) => {\n    return async (dispatch) => {\n        try {\n            // console.log(event);\n            const resp = await fetchConToken(\n                `events/${event.id}`,\n                event,\n                \"PUT\"\n            );\n            const body = await resp.json();\n\n            if (body.ok) {\n                dispatch(eventUpdated(event));\n            } else {\n                Swal.fire(\"Error\", body.msg, \"error\");\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n};\n\nconst eventUpdated = (event) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const eventStartDelete = () => {\n    return async (dispatch, getState) => {\n        const { id } = getState().calendar.activeEvent;\n\n        try {\n            // console.log(id);\n            const resp = await fetchConToken(`events/${id}`, {}, \"DELETE\");\n            const body = await resp.json();\n\n            if (body.ok) {\n                dispatch(eventDeleted());\n            } else {\n                Swal.fire(\"Error\", body.msg, \"error\");\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n};\n\nconst eventDeleted = () => ({\n    type: types.eventDeleted\n});\n\nexport const eventStartLoading = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchConToken(\"events\");\n            const body = await resp.json();\n\n            const events = prepareEvents(body.events);\n            // console.log(events);\n            dispatch(eventLoaded(events));\n        } catch (error) {\n            console.log(error);\n        }\n    };\n};\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n});\n","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport { eventClearActiveEvent } from \"./events\";\n\n// Login usuario\nexport const startLogin = (email, password) => {\n    return async (dispatch) => {\n        // console.log(email, password)\n\n        const resp = await fetchSinToken(\"auth\", { email, password }, \"POST\");\n        const body = await resp.json();\n        // console.log(body)\n\n        if (body.ok) {\n            localStorage.setItem(\"token\", body.token);\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n            dispatch(\n                login({\n                    uid: body.uid,\n                    name: body.name\n                })\n            );\n        } else {\n            Swal.fire(\"Error\", body.msg, \"error\");\n        }\n    };\n};\n// Registro usuario\nexport const startRegister = (name, email, password) => {\n    return async (dispatch) => {\n        const resp = await fetchSinToken(\n            \"auth/register\",\n            { name, email, password },\n            \"POST\"\n        );\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem(\"token\", body.token);\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n            dispatch(\n                login({\n                    uid: body.uid,\n                    name: body.name\n                })\n            );\n\n            Swal.fire(\n                \"Registro exitoso\",\n                \"Se ha logrado registrar correctamente.\",\n                \"success\"\n            );\n        } else {\n            Swal.fire(\"Error\", body.msg, \"error\");\n        }\n    };\n};\n\n// Check log y renew token\nexport const startChecking = () => {\n    return async (dispatch) => {\n        const resp = await fetchConToken(\"auth/renew\");\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem(\"token\", body.token);\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n            dispatch(\n                login({\n                    uid: body.uid,\n                    name: body.name\n                })\n            );\n        } else {\n            dispatch(checkingFinish());\n        }\n    };\n};\n\nconst checkingFinish = () => ({\n    type: types.authCheckingFinish\n});\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        localStorage.clear();\n        dispatch(logout());\n        dispatch(eventClearActiveEvent());\n    };\n};\n\nconst logout = () => ({\n    type: types.authLogout\n});\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    };\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n    };\n\n    return [values, handleInputChange, reset];\n};\n","import { TextField } from \"@mui/material\";\nimport { styled } from \"@mui/system\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { startLogin, startRegister } from \"../../actions/auth\";\nimport { useForm } from \"../../hooks/useForm\";\nimport \"./LoginScreen.css\";\n\nconst CssTextField = styled(TextField)({\n    \"& label.Mui-focused\": {\n        color: \"white\"\n    },\n    \"& .MuiInput-underline:after\": {\n        borderBottomColor: \"white\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n        \"& fieldset\": {\n            borderColor: \"red\"\n        },\n        \"&:hover fieldset\": {\n            borderColor: \"yellow\"\n        },\n        \"&.Mui-focused fieldset\": {\n            borderColor: \"white\"\n        }\n    }\n});\n\nexport const LoginScreen = () => {\n    const dispatch = useDispatch();\n\n    const [formLoginValues, handleLoginInputChange] = useForm({\n        lEmail: \"roberto@gmail.com\",\n        lPassword: \"123456\"\n    });\n\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n        rName: \"Fernando\",\n        rEmail: \"fernando@gmail.com\",\n        rPassword1: \"123456\",\n        rPassword2: \"123456\"\n    });\n\n    const { lEmail, lPassword } = formLoginValues;\n\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        dispatch(startLogin(lEmail, lPassword));\n        // console.log(formLoginValues);\n    };\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (rPassword1 !== rPassword2) {\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\n        }\n\n        dispatch(startRegister(rName, rEmail, rPassword1));\n        // console.log(formLoginValues);\n    };\n\n    \n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form on onSubmit={handleLogin}>\n                        <div className=\"form-group\">\n                            <TextField\n                                id=\"standard-basic\"\n                                label=\"Correo\"\n                                variant=\"standard\"\n                                type=\"email\"\n                                name=\"lEmail\"\n                                value={lEmail}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <TextField\n                                id=\"standard-basic\"\n                                label=\"Contraseña\"\n                                variant=\"standard\"\n                                type=\"password\"\n                                name=\"lPassword\"\n                                value={lPassword}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\"\n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <CssTextField\n                                id=\"standard-basic\"\n                                label=\"Nombre\"\n                                variant=\"standard\"\n                                name=\"rName\"\n                                value={rName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <CssTextField\n                                id=\"standard-basic\"\n                                type=\"email\"\n                                label=\"Correo\"\n                                variant=\"standard\"\n                                name=\"rEmail\"\n                                value={rEmail}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <CssTextField\n                                id=\"standard-basic\"\n                                label=\"Contraseña\"\n                                variant=\"standard\"\n                                type=\"password\"\n                                name=\"rPassword1\"\n                                value={rPassword1}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <CssTextField\n                                id=\"standard-basic\"\n                                label=\"Repita la contraseña\"\n                                variant=\"standard\"\n                                type=\"password\"\n                                name=\"rPassword2\"\n                                value={rPassword2}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Crear cuenta\"\n                            />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startLogout } from \"../../actions/auth\";\n\nexport const Navbar = () => {\n    const { name } = useSelector((state) => state.auth);\n    const dispatch = useDispatch();\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    };\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">{name}</span>\n\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\n                <i className=\"fas fa-sign-out-alt\" />\n                <span> Salir</span>\n            </button>\n        </div>\n    );\n};\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const {title, user} = event;\n\n    return (\n        <div>\n            <strong> {title} </strong>\n            <span>- {user.name} </span>\n        </div>\n    )\n}\n","\n\nexport const customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n    },\n};","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n});\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n});","import React, { useEffect, useState } from \"react\";\nimport Modal from \"react-modal\";\n\nimport DateTimePicker from \"react-datetime-picker\";\nimport moment from \"moment\";\nimport Swal from \"sweetalert2\";\n\nimport { customStyles } from \"../../helpers/modal-style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiCloseModal } from \"../../actions/ui\";\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from \"../../actions/events\";\n\nModal.setAppElement(\"#root\");\n\nconst now = moment().minutes(0).seconds(0).add(1, \"hours\");\nconst later = now.clone().add(1, \"hours\");\n\nconst initEvent = {\n    title: \"\",\n    notes: \"\",\n    start: now.toDate(),\n    end: later.toDate()\n};\n\nexport const CalendarModal = () => {\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector((state) => state.ui);\n    const { activeEvent } = useSelector((state) => state.calendar);\n\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [endDate, setEndDate] = useState(later.toDate());\n    const [titleValid, setTitleValid] = useState(true);\n\n    const [formValues, setFormValues] = useState(initEvent);\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if (activeEvent) {\n            setFormValues(activeEvent);\n        } else {\n            setFormValues(initEvent);\n        }\n    }, [activeEvent, setFormValues]);\n\n    const handleStartDateChange = (e) => {\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            start: e\n        });\n    };\n\n    const handleEndDateChange = (e) => {\n        setEndDate(e);\n        setFormValues({\n            ...formValues,\n            end: e\n        });\n    };\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    };\n\n    const closeModal = () => {\n        dispatch(uiCloseModal());\n        dispatch(eventClearActiveEvent())\n        setFormValues(initEvent);\n    };\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        // console.log(formValues);\n\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if (momentStart.isSameOrAfter(momentEnd)) {\n            return Swal.fire(\n                \"Error\",\n                \"La fecha fin debe ser mayor a la fecha de inicio\",\n                \"error\"\n            );\n        }\n\n        if (title.trim().length < 2) {\n            return setTitleValid(false);\n        }\n\n        //TODO: realizar grabaciones en bd\n        if (activeEvent) {\n            dispatch(eventStartUpdate(formValues))\n        } else {\n            dispatch(\n                eventStartAddNew(formValues)\n            );\n        }\n\n        setTitleValid(true);\n        closeModal();\n    };\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            // onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n            <h1> {(activeEvent) ? 'Editar evento': 'Nuevo evento'} </h1>\n            <hr />\n            <form className=\"container\" onSubmit={handleSubmitForm}>\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        className=\"form-control\"\n                        onChange={handleStartDateChange}\n                        value={dateStart}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        className=\"form-control\"\n                        onChange={handleEndDateChange}\n                        value={endDate}\n                        minDate={dateStart}\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${\n                            !titleValid && \"is-invalid\"\n                        }`}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={title}\n                        onChange={handleInputChange}\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\n                        Una descripción corta\n                    </small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\n                        Información adicional\n                    </small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n            </form>\n        </Modal>\n    );\n};\n","\n\nimport React from 'react';\nimport {useDispatch} from 'react-redux';\nimport { eventClearActiveEvent } from '../../actions/events';\nimport {uiOpenModal} from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch(uiOpenModal());\n        dispatch(eventClearActiveEvent());\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={handleClickNew}\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { eventStartDelete } from \"../../actions/events\";\n\nexport const DeleteEventFab = () => {\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch(eventStartDelete());\n    };\n\n    return (\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\n\nimport { Navbar } from \"../ui/Navbar\";\nimport { messages } from \"../../helpers/calendar-messages-es\";\nimport { CalendarEvent } from \"./CalendarEvent\";\n\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { CalendarModal } from \"./CalendarModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiOpenModal } from \"../../actions/ui\";\nimport {\n    eventClearActiveEvent,\n    eventSetActive,\n    eventStartLoading\n} from \"../../actions/events\";\nimport { AddNewFab } from \"../ui/AddNewFab\";\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\n\nmoment.locale(\"es\");\n\nconst localizer = momentLocalizer(moment);\n\n// const events = [{\n//     title: 'Cumpleanos del tio',\n//     start: moment().toDate(),    // sinonimo de new Date() pero con moment\n//     end: moment().add(2, 'hour').toDate(),\n//     bgcolor: '#fafafa',\n//     notes: 'Comprar pastel',\n//     user: {\n//         _id: '123',\n//         name: 'Roberto'\n//     }\n// }]\n\nexport const CalendarScreen = () => {\n    const dispatch = useDispatch();\n\n    const { events, activeEvent } = useSelector((state) => state.calendar);\n    const { uid } = useSelector((state) => state.auth);\n\n    const [lastView, setLastView] = useState(\n        localStorage.getItem(\"lastView\") || \"month\"\n    );\n\n    useEffect(() => {\n        dispatch(eventStartLoading());\n    }, [dispatch]);\n\n    const onDoubleClickEvent = (e) => {\n        dispatch(uiOpenModal());\n        // console.log('onDoubleClickEvent', e);\n    };\n\n    const onSelectEvent = (e) => {\n        dispatch(eventSetActive(e));\n        // console.log('onSelectEvent', e);\n    };\n\n    const onViewChange = (e) => {\n        // console.log('onViewChange', e);\n        setLastView(e);\n        localStorage.setItem(\"lastView\", e);\n    };\n\n    const onSelectSlot = (e) => {\n        dispatch(eventClearActiveEvent());\n    };\n\n    const eventStyleGetter = (event, start, end, isSelected) => {\n        \n        const style = {\n            backgroundColor: (uid === event.user._id) ? \"#367CF7\" : \"#465660\",\n            borderRadius: \"0px\",\n            opacity: 0.8,\n            display: \"block\",\n            color: \"white\"\n        };\n\n        return {\n            style\n        };\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={messages}\n                eventPropGetter={eventStyleGetter}\n                onDoubleClickEvent={onDoubleClickEvent}\n                onSelectEvent={onSelectEvent}\n                onView={onViewChange}\n                onSelectSlot={onSelectSlot}\n                selectable={true}\n                view={lastView}\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n            <AddNewFab />\n\n            {activeEvent && <DeleteEventFab />}\n\n            <CalendarModal />\n        </div>\n    );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Redirect, Route } from \"react-router-dom\";\n\n// en las props que recibimos, isAutenticated es para ver si el user es logeado\n// el component, es el componente que se va a renderizar, se renombro ya que es un componente\n// todos los demas argumentos, como el exact, path, etc, los recuperaremos con el operador ...rest\n// quiere decir, que el resto de los argumentos caeran en esta prop.\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    //console.log(rest);\n\n    localStorage.setItem(\"lastPath\", rest.location.pathname);\n\n    // el return regresara un Route, y que va tener esta ruta?...\n    // basicamente todo el resto de propiades, osea el ...rest.\n    // luego de manera condicional, le pasaremos el componente junto con las props\n    // que serian history, location, params etc.\n    // luego en el ternario, si esta autenticado, lo mandaremos al componente que\n    // el usuario quiere entrar junto con sus props, usamos el operador spread.\n    // y si no esta autenticado, le redirigimos directo al componente del login.\n    return (\n        <Route\n            {...rest}\n            component={(props) =>\n                isAuthenticated ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to=\"/login\" />\n                )\n            }\n        />\n    );\n};\n\n// Con esto, nuestro privateroute funciona de manera correcta\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route\n            {...rest}\n            component={(props) =>\n                !isAuthenticated ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to=\"/\" />\n                )\n            }\n        />\n    );\n};\n\n// Con esto, nuestro publicroute funciona de manera correcta\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n};","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    Switch,\n    BrowserRouter as Router,\n    Redirect\n} from \"react-router-dom\";\nimport { startChecking } from \"../actions/auth\";\n\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { PublicRoute } from \"./PublicRoute\";\n\nexport const AppRouter = () => {\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector((state) => state.auth);\n\n    useEffect(() => {\n        dispatch(startChecking());\n    }, [dispatch]);\n\n    if (checking) {\n        return <h3>Espere..</h3>;\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        isAuthenticated={!!uid}\n                        exact\n                        path=\"/login\"\n                        component={LoginScreen}\n                    />\n                    <PrivateRoute\n                        isAuthenticated={!!uid}\n                        exact\n                        path=\"/\"\n                        component={CalendarScreen}\n                    />\n\n                    <Redirect to=\"/\" />\n                </Switch>\n\n                {/* \n                    // exact /login - LoginScreen\n                    // exact /  -CalendarScreen\n                */}\n            </div>\n        </Router>\n    );\n};\n","import React from 'react';\nimport { Provider } from \"react-redux\";\n\n\nimport { store } from './store/store';\nimport { AppRouter } from './routers/AppRouter';\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}